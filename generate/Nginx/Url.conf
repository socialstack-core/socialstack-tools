server {
	listen 80;
	listen [::]:80;

	charset utf-8;
	index index.html index.php;
	error_log /dev/null;
	access_log /dev/null;
	
	server_name UrlSet;

	location /.well-known {
	
		root /var/www/certbot;
		try_files $uri =404;
		
	}

	location / {
		return 301 https://PreferredUrl$request_uri;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	# ssl_certificate /etc/letsencrypt/live/Url/fullchain.pem;
	# ssl_certificate_key /etc/letsencrypt/live/Url/privkey.pem;
	server_name UrlSet;
	server_tokens off;
	charset utf-8;
	index index.html index.json index.php;
	root "RemoteDirectory/UI/public"; # Change this if it's somewhere else (also see below)!

    location /block.html
    {
        try_files $uri $uri/ /block.html;
	}
	
	location /.well-known
    {
		root /var/www/certbot;
		try_files $uri =404;
		
	}
	
	error_page 404 /error.html;
	error_page 500 502 503 504 /error.html;
	
	location ~ ^/en-admin
	{
		gzip_static on;
		add_header Cache-Control public; 
		root "RemoteDirectory/Admin/public";
		try_files $uri $uri/ /en-admin/index.html;
	}
	
    location ~ ^/content/
    {
        gzip_static on;
		expires max;
		add_header Cache-Control public; 
		try_files $uri $uri/ index.html;
        root "RemoteDirectory/Content"; # Change this if it's somewhere else!
    }
    
    location ~ ^/content-private/
    {
        proxy_pass http://unix:RemoteDirectory/api.sock;    # Kestrel (.NET Core webserver)
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 512M;
        proxy_set_header Connection keep-alive;
    }
    
	location ~ ^/v1/
	{
		proxy_pass http://unix:RemoteDirectory/api.sock;  # Kestrel (.NET Core webserver)
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 512M;
        proxy_set_header Connection keep-alive;
	}
    
    location ~ ^/live-websocket/
    {
        proxy_pass http://unix:RemoteDirectory/api.sock;  # Kestrel (.NET Core webserver)
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    
	location /
	{
		gzip_static on;
		add_header Cache-Control public;
		
        # if ($cookie_protect != "the.password") {
        #   return 401;
        # }
        
		try_files $uri $uri/ /index.html;
	}
	
}


map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}